{"ts":1361390495938,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<html>\n  <head>\n    <meta http-equiv=\"Content-type\" content=\"text/html;charset=UTF-8\">\n    <script type=\"text/javascript\">\n      var CLIENT_ID = '<YOUR_CLIENT_ID>';\n      var SCOPES = 'https://www.googleapis.com/auth/drive';\n\n      /**\n       * Called when the client library is loaded to start the auth flow.\n       */\n      function handleClientLoad() {\n        window.setTimeout(checkAuth, 1);\n      }\n\n      /**\n       * Check if the current user has authorized the application.\n       */\n      function checkAuth() {\n        gapi.auth.authorize(\n            {'client_id': CLIENT_ID, 'scope': SCOPES, 'immediate': true},\n            handleAuthResult);\n      }\n\n      /**\n       * Called when authorization server replies.\n       *\n       * @param {Object} authResult Authorization result.\n       */\n      function handleAuthResult(authResult) {\n        var authButton = document.getElementById('authorizeButton');\n        var filePicker = document.getElementById('filePicker');\n        authButton.style.display = 'none';\n        filePicker.style.display = 'none';\n        if (authResult && !authResult.error) {\n          // Access token has been successfully retrieved, requests can be sent to the API.\n          filePicker.style.display = 'block';\n          filePicker.onchange = uploadFile;\n        } else {\n          // No access token could be retrieved, show the button to start the authorization flow.\n          authButton.style.display = 'block';\n          authButton.onclick = function() {\n              gapi.auth.authorize(\n                  {'client_id': CLIENT_ID, 'scope': SCOPES, 'immediate': false},\n                  handleAuthResult);\n          };\n        }\n      }\n\n      /**\n       * Start the file upload.\n       *\n       * @param {Object} evt Arguments from the file selector.\n       */\n      function uploadFile(evt) {\n        gapi.client.load('drive', 'v2', function() {\n          var file = evt.target.files[0];\n          insertFile(file);\n        });\n      }\n\n      /**\n       * Insert new file.\n       *\n       * @param {File} fileData File object to read data from.\n       * @param {Function} callback Function to call when the request is complete.\n       */\n      function insertFile(fileData, callback) {\n        const boundary = '-------314159265358979323846';\n        const delimiter = \"\\r\\n--\" + boundary + \"\\r\\n\";\n        const close_delim = \"\\r\\n--\" + boundary + \"--\";\n\n        var reader = new FileReader();\n        reader.readAsBinaryString(fileData);\n        reader.onload = function(e) {\n          var contentType = fileData.type || 'application/octet-stream';\n          var metadata = {\n            'title': fileData.name,\n            'mimeType': contentType\n          };\n\n          var base64Data = btoa(reader.result);\n          var multipartRequestBody =\n              delimiter +\n              'Content-Type: application/json\\r\\n\\r\\n' +\n              JSON.stringify(metadata) +\n              delimiter +\n              'Content-Type: ' + contentType + '\\r\\n' +\n              'Content-Transfer-Encoding: base64\\r\\n' +\n              '\\r\\n' +\n              base64Data +\n              close_delim;\n\n          var request = gapi.client.request({\n              'path': '/upload/drive/v2/files',\n              'method': 'POST',\n              'params': {'uploadType': 'multipart'},\n              'headers': {\n                'Content-Type': 'multipart/mixed; boundary=\"' + boundary + '\"'\n              },\n              'body': multipartRequestBody});\n          if (!callback) {\n            callback = function(file) {\n              console.log(file)\n            };\n          }\n          request.execute(callback);\n        }\n      }\n    </script>\n    <script type=\"text/javascript\" src=\"https://apis.google.com/js/client.js?onload=handleClientLoad\"></script>\n  </head>\n  <body>\n    <!--Add a file picker for the user to start the upload process -->\n    <input type=\"file\" id=\"filePicker\" style=\"display: none\" />\n    <input type=\"button\" id=\"authorizeButton\" style=\"display: none\" value=\"Authorize\" />\n  </body>\n</html>"]],"start1":0,"start2":0,"length1":0,"length2":4055}]],"length":4055}
